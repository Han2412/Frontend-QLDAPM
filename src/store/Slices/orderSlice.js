import { createApi } from "@reduxjs/toolkit/query/react";
import axiosBaseQuery from "./AxiosBaseQuery";

const API_URL = import.meta.env.VITE_APP_API_URL;

const OrderAPI = createApi({
  reducerPath: "OrderAPI",
  baseQuery: axiosBaseQuery({ baseUrl: API_URL }),
  tagTypes: ["Order"], // ðŸ‘ˆ ThÃªm tag Ä‘á»ƒ quáº£n lÃ½ cache
  endpoints: (build) => ({
    // ðŸŸ¢ Táº¡o Ä‘Æ¡n hÃ ng má»›i
    createOrder: build.mutation({
      query: (body) => ({
        url: "/api/order/create",
        method: "POST",
        data: body,
      }),
      invalidatesTags: ["Order"], // âœ… Cáº­p nháº­t láº¡i danh sÃ¡ch Ä‘Æ¡n hÃ ng sau khi táº¡o
    }),

    // ðŸŸ¢ Láº¥y Ä‘Æ¡n hÃ ng theo bÃ n
    getOrrderItemByTableID: build.query({
      query: (tableID) => ({
        url: `/api/order/table/${tableID}`,
        method: "GET",
      }),
      providesTags: ["Order"], // âœ… Cung cáº¥p tag Ä‘á»ƒ cÃ¡c mutation khÃ¡c biáº¿t refetch
    }),

    // ðŸŸ¢ Láº¥y toÃ n bá»™ Ä‘Æ¡n hÃ ng
    getAllOrder: build.query({
      query: () => ({
        url: `/api/order`,
        method: "GET",
      }),
      providesTags: ["Order"], // âœ… Cho phÃ©p refetch tá»± Ä‘á»™ng khi Order bá»‹ invalidated
    }),

    // ðŸŸ¡ Cáº­p nháº­t tráº¡ng thÃ¡i Ä‘Æ¡n hÃ ng
    updateOrderStatus: build.mutation({
      query: ({ id, status }) => ({
        url: `/api/order/updateStatusOrder/${id}/${status}`,
        method: "PUT",
      }),
      invalidatesTags: ["Order"], // âœ… LÃ m má»›i danh sÃ¡ch sau khi cáº­p nháº­t
    }),
  }),
});

export const {
  useCreateOrderMutation,
  useGetOrrderItemByTableIDQuery,
  useGetAllOrderQuery,
  useUpdateOrderStatusMutation,
} = OrderAPI;

export default OrderAPI;
